{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocio\\\\Documentos (in this PC)\\\\Facultad\\\\PyRobots-rd2d-frontend\\\\pyrobots-app\\\\src\\\\components\\\\LogIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './LogIn.css';\nimport { Form, ButtonContainer, Button } from \"../elements/Forms.js\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  const [user, changeUser] = useState({\n    field: \"\",\n    valid: null\n  });\n  const [password, changePassword] = useState({\n    field: \"\",\n    valid: null\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: user.field,\n        password: password.field\n      })\n    });\n\n    if (user.valid === \"true\" && password.valid === \"true\") {\n      changeUser({\n        field: \"\",\n        valid: \"\"\n      });\n      changePassword({\n        field: \"\",\n        valid: null\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hola!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrate en PyRobots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      action: \"\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        state: user,\n        changeState: changeUser,\n        type: \"text\",\n        label: \"Usuario\",\n        placeholder: \"username\",\n        name: \"user\",\n        errorText: \"El user ya existe.\",\n        obligatory: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        state: password,\n        changeState: changePassword,\n        type: \"password\",\n        label: \"Contrase\\xF1a\",\n        name: \"password1\",\n        errorText: \"La contrase\\xF1a tiene que ser de 8 caracteres como m\\xEDnimo.\",\n        obligatory: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogIn, \"AHOeQjo9rcYGfnD7jYtMG6nnir8=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","Form","ButtonContainer","Button","Input","LogIn","user","changeUser","field","valid","password","changePassword","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","username"],"sources":["C:/Users/rocio/Documentos (in this PC)/Facultad/PyRobots-rd2d-frontend/pyrobots-app/src/components/LogIn.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './LogIn.css';\r\nimport {\r\n  Form,\r\n  ButtonContainer,\r\n  Button\r\n} from \"../elements/Forms.js\";\r\nimport Input from \"./Input\";\r\n\r\nconst LogIn = () => {\r\n  const [user, changeUser] = useState({ field: \"\", valid: null });\r\n  const [password, changePassword] = useState({ field: \"\", valid: null });\r\n\r\n  const onSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    await fetch(\"http://localhost:3000/users\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username : user.field,\r\n        password : password.field\r\n      })\r\n    });\r\n\r\n    if (\r\n      user.valid === \"true\" &&\r\n      password.valid === \"true\" \r\n    ) {\r\n      changeUser({ field: \"\", valid: \"\" });\r\n      changePassword({ field: \"\", valid: null });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h1>Hola!</h1>\r\n      <h2>Registrate en PyRobots</h2>\r\n      <Form action=\"\" onSubmit={onSubmit}>\r\n        <Input\r\n          state={user}\r\n          changeState={changeUser}\r\n          type=\"text\"\r\n          label=\"Usuario\"\r\n          placeholder=\"username\"\r\n          name=\"user\"\r\n          errorText=\"El user ya existe.\"\r\n          obligatory=\"true\"\r\n        />\r\n        <Input\r\n          state={password}\r\n          changeState={changePassword}\r\n          type=\"password\"\r\n          label=\"Contraseña\"\r\n          name=\"password1\"\r\n          errorText=\"La contraseña tiene que ser de 8 caracteres como mínimo.\"\r\n          obligatory=\"true\"\r\n        />\r\n\r\n        <ButtonContainer>\r\n          <Button type=\"submit\">Enviar</Button>\r\n        </ButtonContainer>\r\n         \r\n      </Form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LogIn;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SACEC,IADF,EAEEC,eAFF,EAGEC,MAHF,QAIO,sBAJP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBP,QAAQ,CAAC;IAAEQ,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CAAD,CAAnC;EACA,MAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BX,QAAQ,CAAC;IAAEQ,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CAAD,CAA3C;;EAEA,MAAMG,QAAQ,GAAG,MAAMC,CAAN,IAAY;IAC3BA,CAAC,CAACC,cAAF;IAEA,MAAMC,KAAK,CAAC,6BAAD,EAAgC;MACzCC,MAAM,EAAE,MADiC;MAEzCC,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAFgC;MAGzCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,QAAQ,EAAGf,IAAI,CAACE,KADG;QAEnBE,QAAQ,EAAGA,QAAQ,CAACF;MAFD,CAAf;IAHmC,CAAhC,CAAX;;IASA,IACEF,IAAI,CAACG,KAAL,KAAe,MAAf,IACAC,QAAQ,CAACD,KAAT,KAAmB,MAFrB,EAGE;MACAF,UAAU,CAAC;QAAEC,KAAK,EAAE,EAAT;QAAaC,KAAK,EAAE;MAApB,CAAD,CAAV;MACAE,cAAc,CAAC;QAAEH,KAAK,EAAE,EAAT;QAAaC,KAAK,EAAE;MAApB,CAAD,CAAd;IACD;EACF,CAnBD;;EAqBA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,IAAD;MAAM,MAAM,EAAC,EAAb;MAAgB,QAAQ,EAAEG,QAA1B;MAAA,wBACE,QAAC,KAAD;QACE,KAAK,EAAEN,IADT;QAEE,WAAW,EAAEC,UAFf;QAGE,IAAI,EAAC,MAHP;QAIE,KAAK,EAAC,SAJR;QAKE,WAAW,EAAC,UALd;QAME,IAAI,EAAC,MANP;QAOE,SAAS,EAAC,oBAPZ;QAQE,UAAU,EAAC;MARb;QAAA;QAAA;QAAA;MAAA,QADF,eAWE,QAAC,KAAD;QACE,KAAK,EAAEG,QADT;QAEE,WAAW,EAAEC,cAFf;QAGE,IAAI,EAAC,UAHP;QAIE,KAAK,EAAC,eAJR;QAKE,IAAI,EAAC,WALP;QAME,SAAS,EAAC,gEANZ;QAOE,UAAU,EAAC;MAPb;QAAA;QAAA;QAAA;MAAA,QAXF,eAqBE,QAAC,eAAD;QAAA,uBACE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAzDD;;GAAMN,K;;KAAAA,K;AA2DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}